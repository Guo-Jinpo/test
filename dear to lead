
2
当时的背景：
大家刚进入项目，对项目不熟悉。
接手的是完全陌生的模块
整个项目开发的主力已经全部撤出。
当时受到团队氛围的影响。因为我们一直在做engineer culture，在强调如何通过设计模式，BDD，TDD等模式，提高架构，代码质量。
接盘后，发现是个大坑，新老版本耦合在一起，一个文件达到几千行代码，结构层次存在严重的问题。。如何确定是个大坑。
可以认识到的问题：能通过一些角度，看到一些东西，
比如：
沟通：如果继续和新系统混杂开发，新老代码耦合在一起，需要不断地和老人进行沟通确认，沟通成本就会持续增高。
质量：项目质量如何提高，我们需要分离，减少耦合，才能更彻底的重构，
范围：如果不进行架构调整，因为后期需要移除老的系统，提高UT覆盖率，新老代码都在一起，后期范围变得不可控，
进度：开发过程需要添加各种逻辑判断，来控制是新的逻辑还是老的逻辑，也会经常需要解决新老代码merge的冲突，从而进度会比较慢。
人： 当时大家都处在刚进入项目阶段，对项目不了解，如果架构不重构，项目复杂度比较大，时间长，对大家的心态和工作压力都会有影响。
风险：按照现有前端代码架构继续开发，风险不可控，因为新的和老的代码参杂在一起，任何一次提交代码，都会对老的系统产生影响。

既然是大坑，且一入坑，就得想如何优雅的填坑。
既然存在这么多问题，所以决定重构，寻找一种解决方案。经过一番调查。确定了方案，先和大连我们团队进行讲解，取得大家的认可和支持。做了小范围的poc，保证方案可行性。然后把方案给美国，之后又经过多次的沟通，美国也从最开始的排斥，慢慢的接受，最后同意

排斥的原因：
我们彼此不了解，对我们的技术也不了解； 
我们接触项目的时间比较短，这个方案是波兰和他们之前定的，也是他们认可的。 推翻就意味着对他们方案的否定。

收获：得到了团队的信任。在沟通过程中，需要把握各个人的反馈，态度。随时报有失败的准备，及时调整心态。

DEMO


大家好，我是Edward，很荣幸和感谢组织给这个机会，让我第一个分享。现在由我来简单介绍一下，
首先当时的背景是这样的，我们刚加入planit这个项目，项目中大部分主力波兰团队全部退出。我们要在波兰团队开发的基础上继续新模块的开发。
接盘后，发现是个大坑，从代码层面：新老版本代码耦合在一起，通过逻辑开关控制，一个文件达到几千行代码，结构层次存在错乱的问题，
从项目管理层面：因为耦合度太强，做新模块的时候，需要清晰了解老模块的功能，增加了沟通成本，且项目复杂度提升，项目中存在的也风险大幅提升，比如每一次提交代码，对老系统都会存在影响，
进而可能导致项目进度难以控制，且项目的质量必然下降。
从人员角度： 大家都刚进入项目，既要了解老的代码逻辑，又要写新的代码，另外项目已经上线，大家时刻都要注意是否影响大家的使用。大家的压力必然变大。
经过一番调查。确定了方案，先和大连我们团队进行讲解，取得大家的认可和支持。做了小范围的poc，保证方案可行性。然后把方案给美国，之后又经过多次的沟通，美国也从最开始的排斥，慢慢的接受，最后同意


